#!/bin/bash

# Add color
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'

# Check version
current="version=1.0"

# Check for the -b or --bypass flag
bypass=false
for arg in "$@"; do
  if [[ "$arg" == "-b" || "$arg" == "--bypass" ]]; then
    bypass=true
  fi
done

# Bypass logic
if [[ "$bypass" == true ]]; then
  latest="$current"
  echo -e "${YELLOW}Bypassing the update check.${NC}"
else
  echo "Checking version using codeberg:"
  latest=$(curl --connect-timeout 5 -s https://codeberg.org/firebadnofire/cloudflare-toolbox/raw/branch/main/version.txt | sed -n -e 3p)

  # Compare version
  if [[ "$latest" == curl:* ]]; then
    echo -e "${YELLOW}Couldn't connect to Codeberg to check for updates.${NC} Continuing anyway..."
  elif [[ "$latest" == "$current" ]]; then
    echo -e "${GREEN}You are up to date!${NC}"
  else
    echo -e "${RED}Your software is out of date!${NC} Pull the latest repo to update!"
    echo -e "Tip: You may bypass this by invoking -b or --bypass"

    # If the bypass flag isn't set, exit the script
    exit
  fi
fi

#check for dependancies
if ! command -v curl &> /dev/null
then
    echo "curl could not be found"
sleep 1
        exit
fi
if ! command -v openssl &> /dev/null
then
    echo "openssl could not be found"
sleep 1
        exit
fi
if ! command -v jq &> /dev/null
then
    echo "jq could not be found"
sleep 1
        exit
fi

usage() {
  echo "Usage: $0 sub.your.domain"
  echo
  echo "  sub.your.domain               domain of the record"
}

if [ $# -lt 1 ]; then
  usage
  exit 1
fi

### IMPORT VARS ###

EMAIL=$(cfgetauth | grep EMAIL | sed 's/EMAIL //g')
APIKEY=$(cfgetauth | grep APIKEY | sed 's/APIKEY //g')
ZONE_ID=$(cfgetauth | grep ZONE_ID | sed 's/ZONE_ID //g')

### END IMPORT VARS ###

# The domain name to query (passed as the first argument to the script)
DOMAIN_NAME="$1"

# Check if a domain name was provided
if [ -z "$DOMAIN_NAME" ]; then
  echo "Usage: $0 domain_name"
  exit 1
fi

# Make the API request to retrieve DNS records for the specified domain
RESPONSE=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records?name=${DOMAIN_NAME}" \
     -H "X-Auth-Email: ${EMAIL}" \
     -H "X-Auth-Key: ${APIKEY}" \
     -H "Content-Type: application/json")

# Check if the API call was successful
if echo "$RESPONSE" | grep -q '"success":false'; then
  echo "Error retrieving DNS records:"
  echo "$RESPONSE" | jq '.errors[] | {code, message}'
  exit 1
fi

# Extract and display the DNS record IDs
echo "DNS Record IDs for ${DOMAIN_NAME}:"
echo "$RESPONSE" | jq -r '.result[] | "\(.id) - \(.name) (\(.type)) -> \(.content)"'
unset $APIKEY
unset $EMAIL
unset $ZONE_ID
