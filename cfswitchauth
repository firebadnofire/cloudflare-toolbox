#!/bin/bash

# Add color
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'

# Check version
current="version=1.1"

# Check for the -b or --bypass flag
bypass=false
for arg in "$@"; do
  if [[ "$arg" == "-b" || "$arg" == "--bypass" ]]; then
    bypass=true
  fi
done

# Bypass logic
if [[ "$bypass" == true ]]; then
  latest="$current"
  echo -e "${YELLOW}Bypassing the update check.${NC}"
else
  echo "Checking version using codeberg:"
  latest=$(curl --connect-timeout 5 -s https://codeberg.org/firebadnofire/cloudflare-toolbox/raw/branch/main/version.txt | sed -n -e 3p)

  # Compare version
  if [[ "$latest" == curl:* ]]; then
    echo -e "${YELLOW}Couldn't connect to Codeberg to check for updates.${NC} Continuing anyway..."
  elif [[ "$latest" == "$current" ]]; then
    echo -e "${GREEN}You are up to date!${NC}"
  else
    echo -e "${RED}Your software is out of date!${NC} Pull the latest repo to update!"
    echo -e "Tip: You may bypass this by invoking -b or --bypass"
    
    # If the bypass flag isn't set, exit the script
    exit
  fi
fi

DIR="/home/$USER/.config/cloudflare-tools/"

echo "What to do:"
echo "1) Store current auth info"
echo "2) Load auth info from storage"
echo "3|e) exit"
read -p "Enter your choice (1, 2, or 3): " CHOICE

case "$CHOICE" in
  1)

	read -p "What name should this be stored as? " NAME

	if [ -d "$DIR" ]; then
		    cd $DIR
		    mkdir -p auths
		    tar -cavf auths/$NAME.tar.gz auth.*
		    rm auth.*
	else
		    echo "No such dir: $DIR"
	fi

    ;;
  2)
    if ls $DIR/auth.* 1> /dev/null 2>&1; then
    	echo "This option is currently disabled to prevent the loss of saved authentication info."
	echo "Please save your authentication info before proceeding with this option."
    	exit 1
    else
    	ls $DIR/auths/ | sed 's/\.tar\.gz$//'
	read -p "What auth info should be loaded? " LOADNAME
	cd $DIR
	tar -xf auths/$LOADNAME.tar.gz
	rm auths/$LOADNAME.tar.gz
    fi
    ;;
  3|e)
    echo "Leaving..."
    exit 0
    ;;
  *)
    echo "Invalid response."
    ;;
esac
